/**
 * A feathers service to manage CRUD on MongoDB collections in a provided database.
 * It will allow you to create, read, update, and delete databases on the client.
 *
 * @param  {Object} db [description]
 * @param  {String} collectionName - The name of the collection to be acted upon.
 * @return {Object} - The feathers service.
 */
module.exports = function(db, dbName) {

	function parseName(colName){
		return colName.replace(dbName+'.', '');
	};


	var dbService = {
		find: function(params, callback) {
			var collections = [];
		  var changeDB = db.db(dbName);
		  // Get the collections for this dbName
	  	changeDB.listCollections().toArray(function(err, colls) {
			  // Loop through the collections
	  		for (var n = 0; n < colls.length; n++) {

	  			var options = colls[n].options || {};
	  			// Remove the old name.
	  			delete options.create;
		  		// Remove the dbName from the collection name.
	  			options.name = parseName(colls[n].name);

	  			// Add collection stats
	  			options.stats = db[options.name].stats();


	  			// Add it to the list.
	  	  	collections.push(options);
	  	  };
	  	  console.log('collections');
	  	  console.log(collections);
	  	  // Send the results.
  	  	callback(null, collections);
	  	});
		},

		create: function(data, params, callback) {
			console.log(data);
			callback(null, data);
		},

		update: function(id, data, params, callback) {
			console.log(data);
			callback(err, data);
		},

		remove: function(id, params, callback) {
			console.log(data);
			callback(err, data);
		},

		setup: function(app, path) {
			console.log(path);
			// this.service = app.service.bind(app);
		}
	};

	return dbService;
};
